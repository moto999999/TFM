- name: kubeadm init control-plane-1
  shell: kubeadm init --config /root/kubelet_config.yaml --upload-certs > $HOME/kubeadm_init.log
  when: inventory_hostname in groups['control_plane_1']

- name: get create cluster stdout
  shell: tail -26 $HOME/kubeadm_init.log
  register: kubeadminit
  when: inventory_hostname in groups['control_plane_1']

- name: show kubeadm init stdout
  debug:
    msg: "{{kubeadminit.stdout_lines}}"
  when: inventory_hostname in groups['control_plane_1']

- name: create kube dir
  shell: mkdir -p $HOME/.kube
  when: inventory_hostname in groups['control_plane_1']
  
- name: copy admin conf
  shell: cp /etc/kubernetes/admin.conf $HOME/.kube/config
  when: inventory_hostname in groups['control_plane_1']

- name: change permissions
  shell: chown $(id -u):$(id -g) $HOME/.kube/config
  when: inventory_hostname in groups['control_plane_1']

- name: export KUBECONFIG var
  shell: export KUBECONFIG=$HOME/.kube/config
  when: inventory_hostname in groups['control_plane_1']

- name: Add the Calico helm repo
  shell: "helm repo add projectcalico https://projectcalico.docs.tigera.io/charts"
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
  when: inventory_hostname in groups['control_plane_1']

- name: Create calico-system namespace
  shell: kubectl create namespace calico-system
  when: inventory_hostname in groups['control_plane_1']

- name: Install calico (cni) with helm
  shell: "helm install calico projectcalico/tigera-operator --version v3.25.1 --namespace calico-system"
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
  when: inventory_hostname in groups['control_plane_1']

- name: wait for all nodes to be ready
  shell: kubectl wait --for=condition=Ready nodes --all
  when: inventory_hostname in groups['control_plane_1']

- name: check control-plane-1 node status
  shell: kubectl get nodes
  register: getnodes
  when: inventory_hostname in groups['control_plane_1']

- name: show check status
  debug:
    msg: "{{getnodes.stdout_lines}}"
  when: inventory_hostname in groups['control_plane_1']
