# Stop and Disable Firewall service in all K8S cluster nodes
- name: Stop service firewalld, if started
  service:
    name: firewalld
    state: stopped
    enabled: no
  when: inventory_hostname in groups['kube_cluster']

# Stop and Disable SELinux on all K8S cluster nodes
- name: disable SELinux
  command: setenforce 0
  ignore_errors: true
  when: inventory_hostname in groups['kube_cluster']

- name: disable SELinux on reboot
  ansible.posix.selinux:
    state: disabled
  when: inventory_hostname in groups['kube_cluster']

- name: copy kernel modules config file
  template:
    src: configuration_files/kernel-modules.conf
    dest: '/etc/modules-load.d/k8s.conf'
    mode: 0644
  when: inventory_hostname in groups['kube_cluster']

# Disable swap on all K8S cluster nodes
- name: disable swap
  command: swapoff -a
  when: inventory_hostname in groups['kube_cluster']

- name: disable swap
  command: 'sed -i "/ swap / s/^\(.*\)$/#\1/g" /etc/fstab'
  when: inventory_hostname in groups['kube_cluster']

  # https://discuss.kubernetes.io/t/working-with-registries-and-containerd-in-microk8s/6305/10
- name: Remove IPv6 from /etc/hosts
  lineinfile:
    path: /etc/hosts
    search_string: '::1         localhost localhost.localdomain localhost6 localhost6.localdomain6'
    line: '#::1         localhost localhost.localdomain localhost6 localhost6.localdomain6'
  when: inventory_hostname in groups['kube_cluster']

# Install yum-utils
- name: Install yum-utils
  yum:
    name: yum-utils
    state: present
  when: inventory_hostname in groups['kube_cluster']

# Set up docker repository
- name: set up docker repository
  command: sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
  when: inventory_hostname in groups['kube_cluster']

# Install container.d on all K8S cluster nodes
- name: install container.d from docker repo
  yum:
    name: containerd.io
    state: present
  when: inventory_hostname in groups['kube_cluster']

- name: generate new configuration for container.d
  shell: containerd config default > /etc/containerd/config.toml
  when: inventory_hostname in groups['kube_cluster']

- name: enable the systemd cgroup driver
  lineinfile:
    path: /etc/containerd/config.toml
    search_string: 'SystemdCgroup = false'
    line: '            SystemdCgroup = true'
  when: inventory_hostname in groups['kube_cluster']

# Start containerd service on all K8S cluster nodes
- name: start containerd
  service:
    name: containerd
    enabled: yes
    state: restarted
  when: inventory_hostname in groups['kube_cluster']

# Update all packages
#- name: upgrade all packages
#  yum:
#    name: '*'
#    state: latest
#  when: inventory_hostname in groups['kube_cluster']

# Restart all VMs
- name: Rebooting VMs
  reboot:
  when: inventory_hostname in groups['kube_cluster']
